var App;

App = (function() {
  function App(options) {
    this.options = options != null ? options : {};
    this.query = new this.Query();
    this.parse = new this.Parse();
    this.layout = new this.Layout();
    this.aspect = new this.Aspect();
    this["package"] = {
      attributes: null,
      guide: null,
      manifest: null,
      metadata: null,
      spine: null,
      text: null
    };
    this.location = {
      assets: null,
      url: ("" + window.location.origin).replace(/\/$/, '')
    };
    this.nav = {
      elem: null,
      regexp: null,
      path: null,
      attribute: null
    };
    this.navMap = null;
    this.navUrl = null;
    this.ncx = null;
    this.navRe = null;
    this.html = [];
    this.metadata = [];
  }

  App.prototype.getNavDocument = function(that) {
    return function(key, val, item) {
      if (key === that.nav.attribute && that.nav.regexp.test(val)) {
        that.nav.elem = item;
        that.nav.path = item.getAttribute('href');
        return that.xml();
      }
    };
  };

  App.prototype.renderPage = function(that) {
    return function(url, parentId) {
      return that.query.html(that.location.assets + "/" + url).done(function(data) {
        return that.layout.render(data, parentId);
      });
    };
  };

  App.prototype.xml = function() {
    var curry;
    curry = this.renderPage(this);
    return this.query.xml(this.location.assets + "/" + this.nav.path).done((function(_this) {
      return function(data) {
        _this.ncx = _this.parse.nav(data);
        _this.navMap = _this.parse.mapNcx(_this.ncx.navMap.navPoint);
        return _this.layout.build(_this.navMap, curry);
      };
    })(this));
  };

  App.prototype.build = function(data) {
    var curry;
    curry = this.getNavDocument(this);
    return this.parse.xml(data, curry);
  };

  App.prototype.initialize = function() {
    var attr, token;
    console.log("" + this.location.url);
    token = this.options.toc ? 'nav' : 'ncx';
    attr = this.options.toc ? 'properties' : 'id';
    this.location.assets = this.options.assets || '';
    this.nav.regexp = new RegExp("^" + token + "$", 'i');
    this.nav.attribute = attr;
    return this.query.xml(this.options.packageUrl).done((function(_this) {
      return function(data) {
        return _this.build(data);
      };
    })(this));
  };

  return App;

})();

window.App = App;

//# sourceMappingURL=data:application/json;base64,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c291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQXBwXG5cbiAgY29uc3RydWN0b3I6IChAb3B0aW9ucyA9IHt9KS0+XG5cbiAgICBAcXVlcnkgID0gbmV3IEBRdWVyeSgpXG4gICAgQHBhcnNlICA9IG5ldyBAUGFyc2UoKVxuICAgIEBsYXlvdXQgPSBuZXcgQExheW91dCgpXG4gICAgQGFzcGVjdCA9IG5ldyBAQXNwZWN0KClcblxuICAgIEBwYWNrYWdlID1cbiAgICAgIGF0dHJpYnV0ZXM6IG51bGxcbiAgICAgIGd1aWRlICAgICA6IG51bGxcbiAgICAgIG1hbmlmZXN0ICA6IG51bGxcbiAgICAgIG1ldGFkYXRhICA6IG51bGxcbiAgICAgIHNwaW5lICAgICA6IG51bGxcbiAgICAgIHRleHQgICAgICA6IG51bGxcblxuICAgIEBsb2NhdGlvbiA9XG4gICAgICBhc3NldHMgICA6IG51bGxcbiAgICAgIHVybCAgICAgIDogXCIje3dpbmRvdy5sb2NhdGlvbi5vcmlnaW59XCIucmVwbGFjZSgvXFwvJC8sICcnKVxuXG4gICAgQG5hdiA9XG4gICAgICBlbGVtICAgICAgOiBudWxsXG4gICAgICByZWdleHAgICAgOiBudWxsXG4gICAgICBwYXRoICAgICAgOiBudWxsXG4gICAgICBhdHRyaWJ1dGUgOiBudWxsXG5cbiAgICBAbmF2TWFwICAgPSBudWxsXG4gICAgQG5hdlVybCAgID0gbnVsbFxuICAgIEBuY3ggICAgICA9IG51bGxcbiAgICBAbmF2UmUgICAgPSBudWxsXG4gICAgQGh0bWwgICAgID0gW11cbiAgICBAbWV0YWRhdGEgPSBbXVxuXG4gIGdldE5hdkRvY3VtZW50OiAodGhhdCktPlxuICAgIHJldHVybiAoa2V5LCB2YWwsIGl0ZW0pLT5cbiAgICAgIGlmIGtleSA9PSB0aGF0Lm5hdi5hdHRyaWJ1dGUgYW5kIHRoYXQubmF2LnJlZ2V4cC50ZXN0KHZhbClcbiAgICAgICAgdGhhdC5uYXYuZWxlbSA9IGl0ZW1cbiAgICAgICAgdGhhdC5uYXYucGF0aCA9IGl0ZW0uZ2V0QXR0cmlidXRlKCdocmVmJylcbiAgICAgICAgdGhhdC54bWwoKVxuXG4gIHJlbmRlclBhZ2U6ICh0aGF0KS0+XG4gICAgcmV0dXJuICh1cmwsIHBhcmVudElkKSAtPlxuICAgICAgdGhhdC5xdWVyeS5odG1sKFwiI3t0aGF0LmxvY2F0aW9uLmFzc2V0c30vI3t1cmx9XCIpXG4gICAgICAgIC5kb25lIChkYXRhKS0+XG4gICAgICAgICAgdGhhdC5sYXlvdXQucmVuZGVyKGRhdGEsIHBhcmVudElkKVxuXG4gIHhtbDogKCktPlxuICAgIGN1cnJ5ID0gQHJlbmRlclBhZ2UoQClcbiAgICBAcXVlcnkueG1sKFwiI3tAbG9jYXRpb24uYXNzZXRzfS8je0BuYXYucGF0aH1cIilcbiAgICAgIC5kb25lIChkYXRhKSA9PlxuICAgICAgICBAbmN4ID0gQHBhcnNlLm5hdihkYXRhKVxuICAgICAgICBAbmF2TWFwID0gQHBhcnNlLm1hcE5jeChAbmN4Lm5hdk1hcC5uYXZQb2ludClcbiAgICAgICAgQGxheW91dC5idWlsZChAbmF2TWFwLCBjdXJyeSlcblxuICBidWlsZDogKGRhdGEpLT5cbiAgICBjdXJyeSA9IEBnZXROYXZEb2N1bWVudChAKVxuICAgIEBwYXJzZS54bWwoZGF0YSwgY3VycnkpXG5cbiAgaW5pdGlhbGl6ZTogLT5cbiAgICBjb25zb2xlLmxvZyBcIiN7QGxvY2F0aW9uLnVybH1cIlxuXG4gICAgdG9rZW4gPSBpZiBAb3B0aW9ucy50b2MgdGhlbiAnbmF2JyBlbHNlICduY3gnXG4gICAgYXR0ciA9IGlmIEBvcHRpb25zLnRvYyB0aGVuICdwcm9wZXJ0aWVzJyBlbHNlICdpZCdcbiAgICBAbG9jYXRpb24uYXNzZXRzID0gQG9wdGlvbnMuYXNzZXRzIG9yICcnXG4gICAgQG5hdi5yZWdleHAgPSBuZXcgUmVnRXhwKFwiXiN7dG9rZW59JFwiLCAnaScpXG4gICAgQG5hdi5hdHRyaWJ1dGUgPSBhdHRyXG4gICAgQHF1ZXJ5LnhtbChAb3B0aW9ucy5wYWNrYWdlVXJsKS5kb25lIChkYXRhKSA9PiBAYnVpbGQoZGF0YSlcblxud2luZG93LkFwcCA9IEFwcFxuIl19
